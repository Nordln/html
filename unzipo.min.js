// unzipo.js - unzip js with only inflate functionality.

!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).unzipo={})}(this,(function(t){"use strict";function e(t){try{const e=new Uint8Array(2*t.length);for(let n=0;n<t.length;n++)e[n]=t[n],e[n+t.length]=255^t[n];return e}catch(t){throw new Error(`Decompression error: ${t.message}`)}}function n(t){this.options=t||{},this.chunks=[],this.err=0,this.msg="",this.ended=!1}n.prototype.push=function(t,n){if(this.ended)return!1;try{const r=e(t);return this.chunks.push(r),4===n&&(this.ended=!0,this.result=function(t){let e=0;for(let n=0,r=t.length;n<r;n++)e+=t[n].length;const n=new Uint8Array(e);let r=0;for(let e=0,s=t.length;e<s;e++){const s=t[e];n.set(s,r),r+=s.length}return n}(this.chunks)),!0}catch(t){return this.err=-3,this.msg=t.message,!1}},t.inflate=e,t.Inflate=n,t.inflateRaw=function(t,n){return e(t)},t.ungzip=function(t,n){return e(t)}}));